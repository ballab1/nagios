#!/bin/bash

declare cfgFile="${PNP4NAGIOS['www']}/index.php"
sed -i -E -e "s|^(define\('PNP_LOG_PATH')\s*,.*$|\1, '/var/log');|" "$cfgFile"

#git clone https://github.com/barbushin/php-console.git
#mv php-console/src/PhpConsole "${PNP4NAGIOS['www']}/"
#sed -i -e '11 i\require_once(__DIR__ . DIRECTORY_SEPARATOR . '"'PhpConsole' . DIRECTORY_SEPARATOR . 'Connector.php'"');\n' "$cfgFile"
#sed -i -e '12 i\require_once(__DIR__ . DIRECTORY_SEPARATOR . '"'PhpConsole' . DIRECTORY_SEPARATOR . 'Helper.php'"');\n' "$cfgFile"
#sed -i -e '13 i\PhpConsole\\Handler::getInstance();\n' "$cfgFile"

# mark config as OK
touch "${PNP4NAGIOS['www']}/install.ignore"

# setup config in /etc
#ln -s "${PNP4NAGIOS['etc']}" "${PNP4NAGIOS['home']}/etc"

# pnp4nagios log thresholds:
#  0 - Disable logging, 1 - Errors and exceptions, 2 - Warnings, 3 - Notices,  4 - Debugging
cfgFile="${PNP4NAGIOS['www']}/application/config/config.php"
sed -i -E -e "s|(config\['log_threshold'\]).*|\1 = 2;|g" "$cfgFile"

# guard against deprecated functions:  https://github.com/easydigitaldownloads/easy-digital-downloads/issues/7818
while read -r cfgFile; do
    echo "updating $cfgFile"
    sed -i -e "s|get_magic_quotes_runtime()|version_compare( phpversion(), '5.4', '<' ) \&\& function_exists( 'get_magic_quotes_runtime' ) \&\& get_magic_quotes_runtime()|g" "$cfgFile"
done < <(grep -r 'get_magic_quotes_runtime' ${PNP4NAGIOS['home']}/* | cut -d ':' -f 1)
while read -r cfgFile; do
    echo "updating $cfgFile"
    sed -i -e "s|get_magic_quotes_gpc()|version_compare( phpversion(), '5.4', '<' ) \&\& function_exists( 'get_magic_quotes_gpc' ) \&\& get_magic_quotes_gpc()|g" "$cfgFile"
done < <(grep -r 'get_magic_quotes_gpc' ${PNP4NAGIOS['home']}/* | cut -d ':' -f 1)


cfgFile="${PNP4NAGIOS['etc']}/process_perfdata.cfg"
sed -i -E -e "s|^(LOG_FILE\s*=\s*).*$|\1/var/log/pnp4nagios.log|g" "$cfgFile"


declare perfdataDir="$(readlink -f "$(dirname "$(nagios.CFG_PARAM 'host_perfdata_file')")")"
mkdir -p "$perfdataDir"
chmod 777 "$perfdataDir"


# update all references to rrdtool to use PHP accessible copy
cd /usr/local
declare -a rrdtool
mapfile -t rrdtool < <(grep -rc '/usr/bin/rrdtool' * | grep -v ':0' ||:)
if [ "${#rrdtool[*]}" -gt 0 ]; then
  for f in $(printf '%s\n' "${rrdtool[@]}"| cut -d ':' -f 1); do
    sed -i -e "s|$(which rrdtool)|${NAGIOS['home']}/bin/rrdtool|g" "$f"
  done
fi

# allow PHP processing to access pnp4nagios directories
declare shFile="/usr/local/crf/startup/04.php.sh"
declare org='|open_basedir = ${WWW}/:/tmp/:/etc/phpmyadmin/|'
declare rep="|open_basedir = \${WWW}/:\${NAGIOS['www']}:\${NAGIOS['home']}/bin/:\${PNP4NAGIOS['home']}/lib/:/var/log:\${PNP4NAGIOS['etc']}:/var/nagios:/tmp/:/etc/phpmyadmin/|"
sed -i -e 's%'"$org"'%'"$rep"'%' "$shFile"


cfgFile="${NGINX['etc']}/conf.d/php_fpm.redirect"
sed -i -e '1 i\location ~ ^(/pnp4nagios.*\\.php)(.*)$ {\n    root /var/www/pnp4nagios;\n    try_files $uri @pnp4nagios;\n}\n\n' "$cfgFile"

for cfgFile in $(grep -rc '/var/tmp' "${PNP4NAGIOS['etc']}"/* | grep -v ':0' | cut -d ':' -f 1);do
    sed -i -e 's|= "/var/tmp";|= "/tmp";|g' "$cfgFile"
done


echo '# report any files not changed'
set -v
grep 'open_basedir' "/usr/local/crf/startup/04.php.sh" ||:
grep 'log_threshold' "${PNP4NAGIOS['www']}/application/config/config.php" ||:
grep -rc '/usr/bin/rrdtool' * | grep -v ':0' ||:
set +v
